
<%= simple_form_for(@batch_remark) do |f| %>
  <%= f.error_notification %>
  <%= f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present? %>

  <div class="form-inputs mb-3">
    <%= f.association :batch, as: :hidden %>
    <%= f.input :remark %>
    <%= f.input :status, input_html: { value: @rem_status }, as: :hidden %>
    <%#= f.association :user %>
    <%= f.input :batch_status, input_html: { value: @batch_status }, as: :hidden %>
    <%= f.input :process_coverage, input_html: { value: @process_coverage }, as: :hidden %>
  </div>

  <div class="form-actions text-end">

    <% if params[:coop] %>
      <%= f.button :submit, "Create Request",class: 'btn-success' %>
      <%= link_to "Back", modal_remarks_group_remit_batch_path(@batch.group_remits.find_by(type: 'Remittance'), @batch), class: 'btn btn-secondary', data: { turbo_frame: "modal" } %>
    <% else %>
      <%# <%= link_to "Back", batch_remarks_path, class: 'btn btn-secondary' %> 
      <%= link_to "Back", modal_remarks_process_coverage_path(@process_coverage, batch: @batch), class: 'btn btn-secondary', data: { turbo_frame: "modal" } %>
      <%= f.button :submit, class: 'btn-success' %>
    <% end %>

  </div>
<% end %>
