quit
member
continue
member
quit
continue
member
agreement_benefits
age_min_max
continue
next
question_data
next
question_data
next
question_data
next
question_data
next
question_data
next
question_data
next
question_data
next
question_data
question_data[:answer]
next
question_data[:answer]
question_data
clear
continue
question_data[:]
question_data[:answer]
question_data
continue
question_params.each do |question_id, question_data| 
question_params
question_data
question
continue
question_data[:answer]
question_data
continue
question_data
continue
question_data
question_params
continue
question_params["1"]
question_params[1]
question_params
question
continue
103/12
difference_in_months
incident_date
expiry_date.year
expiry_date
@group_remit
agreement
coop_member
continue
<<<<<<< HEAD
@coop_member.agreements
@coop_member
continue
health_dec.valid_answer.to_s
continue
health_dec.valid_answer.to_s
health_dec.valid_answer
question_data[:answer]
continue
question_data[:answer]
continue
subquestion_data
subquestion_id
subquestion_answer
next
subquestion_answer
next
subquestion_id
subquestion_answer
continue
subquestions
next
subquestions
next
net
question_data
question_data[:subquestion]
question_data[:subquestion][0]
next
subquestion
next
question_data[:subquestion]
question_data[:subquestions]
subquestions
next
question_data[:answer]
answer
question_data
next
question_data
next
question_data
answer
next
question_data\\\
question_data
question_id
subquestions
answer
next
question_data[:subquestions]
question_data
question_id
answer
next
answer
question_params
next
question_params
continue
params[:question]
params[:batch_health_dec]
params
continue
params[:question]
params[:question].keys
params[:question]
params
continue
next
continue
params[:question]
continue
params[:question]["4"]
params[:question]["3"]
params[:question]["2"]
params[:question]["1"]
params[:question]
params[:question][:subquestions]
params[:question][:subquestiond]
params[:question][:subquestion]
params[:subquestion]
params[:subquestions]
params[:question]
params
continue
@questionaire
continue
AgreementBenefits.insured_type
AgreementBenefits.status
params[:question][:8]
params[:question][8]
params[:question]
param[:question]
continue
=======
<<<<<<< HEAD
>>>>>>> 5d3ce79 (merge from underwriting module to main)
=======
>>>>>>> main
coop_members.size
coop_members
q
continue
insured_type
continue
dependent[:relationship]
insured_type
q
continue
q
row
member_hash
quit
continue
batch_hash
continue
row["Rank"]
row = principal_spreadsheet[1]
principal_spreadsheet[1]
principal_spreadsheet[0]
principal_spreadsheet
continue
conntinue
@spreadsheet.sheet(1).headers
@spreadsheet.sheet(1).header
@spreadsheet.sheet(1)
@spreadsheet.sheet_files
@spreadsheet.sheet_names
@spreadsheet
continue
valid_file?
continue
File.extname(file.path)
file.path
file.extname
file.content_type
file
continue
file
csv.sheet(0)
csv
quit
qut
agreement_benefits.find_by(insured_type: :principal).max_age
agreement_benefits.find_by(insured_type: :principal).min_age
@gyrt_plan.include?(@agreement.plan.acronym)
@gyrt.include?(@agreement.plan.acronym)
quit
age_min_max
continue
age_min_max
next
min_age
{min_age}
continue
import_result.is_a?(Hash)
import_result.is_a?(String)
import_result
continue
gyrt_ranking_plan.include?(@agreement.plan.acronym)
gyrt_plan.include?(@agreement.plan.acronym)
continue
ontinue
@denied_members_counter
@denied_members
quit
batch_hash[:rank]
age_min_max
continue
contine
continue
batch_hash[:rank]
age_min_max
continue
age_min_max
agreement_benefits
continue
cntinue
age_min_maxcontinue
age_min_max
continue
batch_hash[:rank]
batch_hash
member
age_min_max
continue
new_batch.save
new_batch.batch_beneficiaries
new_batch.batch_dependents
new_batch
continue
new_batch.save!
new_batch.save
new_batch.member_details.age
new_batch
continue
new_group_remit[:removed_batches]
new_group_remit
continue
@batch.agreement_benefit.max_age
