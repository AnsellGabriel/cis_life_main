continue
agreement
continue
@member
continue
next
continue
group_remit(batch.group_remit.id)
group_remit(batch.group_remit)
batch.group_remit
batch
next
batch
continue
params[:batch_id]
params
continue
batch_health_dec_params
params
@batch_health_dec
continue
@gross_premium.typeof
@gross_premium
@batch_dependent_premiums
continue
@batches_container[0].premium.type_of
@batches_container[0].premium
@batches_dependents[0].premium.type_of
@batches_dependents[0]
@batch_dependents[0]
@gross_premium.to_d
@gross_premium.type_of
@gross_premium
continue
@batches_container.count * 581
@batches_container.pluck(:premium).reduce(0){|sum, price| sum+price}
batches = @batches_container.where(:coop_sf_amount)
batches = @batches_container.where(:coop_sf_amount = 58.3)
batches = @batches_container.where(:coop_sf_amount)
batches = @batches_container.where(coop_sf_amount: true)
batches = @batches_container.where(coop_sf_amount: '58.3')
batches
batches = @batches_container.where(coop_sf_amount: 58.3)
batches = @batches_container.where(coop_sf_amount: not  0)
batches = @batches_container.where(:coop_sf_amount not 0)
batches = @batches_container.where(:coop_sf_amount != 0)
@batches_container.sum(:premium)
@batches_container.count * 583
continue
@batches_container.sum(:coop_sf_amount)continue
@batches_container.sum(:coop_sf_amount)
batch_dependent_coop_commissions
@total_coop_commission
@batches_container.count * 583
@batches_container.count
@batches_container.sum(:premium)
@batches_container.sum(:premium.to_D)
@batches_container.sum(:premium)
@batches_container.sum
@batches_container.sum('batches_container.premium')
@batches_container.sum('batch.premium')
@batches_container.sum(:premium)
@batches_container[0].premium * 1021
@batches_container[0].premium x 1021
@batches_container[0].premium
@batches_container[0]
@batches_container[0].premium
@batches_container.premium
@batches_container.count
@batches.count
@batches
@batches_premium
continue
@batches_container.sum(:coop_sf_amount)
@total_coop_commission
@gross_premium
continue
@batches_dependents
@batch_dependents
batch_dependents
batch_dependent_coop_commissions
@batch_dependent_premiums
continue
cntinue
batch_dependent_coop_commissions
batch_dependent_coop_comissions
@batches_dependents.sum(:premium)
@batches_dependents
@batches_dependent_premiums
quit
coop_sf / 100.to_d * new_batch.premium
coop_sf / 100.0 * new_batch.premium
coop_sf / 100.0
coop_sf / 100.to_d
coop_sf / 100.to_decimal
coop_sf / 100.to_f
coop_sf / 100.to_i
coop_sf.to_i / 100
coop_sf / 100
coop_sf
new_batch.coop_sf_amount
new_batch.coop_sf_mount
new_batch.premium
coop_sf
new_batch
continue
@group_remit.terms
next
terms
continue
anniversary_date
agreement.anniversary_type
today
terms
continue
p * terms
p = premium / 12 
premium / 12
premium
continue
premium
@batch.premium
@batches_container
@batch
continue
batch_params[:transferred].type_of
batch_params[:transferred]
continue
batch_params[:transferred]
batch_params
params
renewal_member.present?
params
params[:transferred]
continue
@group_remiwc
continue
renewal_member.present?
renewal_member
continue
renewal_member.present?
renewal_member
continue
terms
next
terms
today
next
today
anniversary
next
anniversary
continue
contnue
continue
Date.today.month
Date.today.mnth
temp_expiry_date
continue
expiry_terms
@expiry_date
continue
batch_dependent_premiums
next
batch_dependent_premiums
continue
current_url
continue
@batch.batch_dependents.where(is_beneficiary: true)continue
@batch.batch_dependents.where(is_beneficiary: true)
@batch.batch_dependents
@batch.member_dependents
@batch
continue
@batch.member_dependentscontinue
@batch.member_dependents
continue
@batch.member_dependents
@batch
continue
@batch.member_dependents
@batch
@batch.batch_dependents
@batch.member_dependent
@batch.member_dependents
@batch
continue
@batch
@bach_dependent
next
@batch_dependent
continue
ontinue
current_user
@current_cooperative
next
@current_cooperative
next
@current_cooperative
@cooperative
continue
@gross_premium
continue
@gross_premium
continue
coop_member.cooperative
coop_member.cooperatiev
coop_member
continue
@agreement.name
next
plan
continue
agreement_params[:plan_id]
agreement_params
params[:plan_id]
@agreement
plan
continue
params[:plan_id]
params[:commit]
params.commit
params
paramas
params[:plan_id]
plan
params
plan
continue
@agent_sf
@coop_sf
@coop_commission
@premium
continue
@group_remit.agreement
@group_remit
@premium
continue
@premium
continue
member.coop_members.find_by(cooperative_id: 1).batvches.
member.coop_members.find_by(cooperative_id: 1).batvch
member.coop_members.find_by(cooperative_id: 1)
member.coop_members.find_by(cooperative_id: @cooperative.id)
member.coop_members.batch
member.coop_members
member.coop_member
member = batch.coop_member.member
batch.coop_member.member
batch.coop_member.members
batch
batch.coop_member.member
batch.coop_member
batch
batch = @batches[0]
@batches.count
